class Node
{
    public int data;
    public Node next;
    
    Node(int x)
    {
        data = x;
        next = null;
    }
}

class List
{
    public Node first;
    
    List()
    {
        first = null;
    }
    
    public void push(int data)
    {
        Node node;
        
        if (first == null) {
            first = new Node(data);
        }
        else {
            node = first;
            while (node.next != null)
                node = node.next;
            node.next = new Node(data);
        }
    }
    
    public void pop()
    {
        Node current = first;
        Node previous = null;
        
        if (current == null)
            return;
        
        while (current.next != null) {
            previous = current;
            current = current.next;
        }
        
        previous.next = null;
    }
    
    public void traverse()
    {
        Node current = first;
        
        while (current != null) {            
            cout << current.data;
            current = current.next;
        }
        cout << '\n';
    }
}

void main()
{
    int x;
    char c;
    bool f;
    List list = new List();
    list.push(1);
    list.push(2);
    list.push(3);
    list.traverse();
    list.pop();
    list.traverse();
}