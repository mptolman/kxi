class Node
{
    public int data;
    public Node next;
    
    Node(int x)
    {
        data = x;
        next = null;
    }
}

class List
{
    public Node first;
    public Node last;
    
    List()
    {
        first = null;
        last = null;
    }
    
    public void push(int data)
    {
        Node node;
        if (first == null) {
            first = new Node(data);
            last = first;
        }
        else {
            node = new Node(data);
            last.next = node;
            last = node;
        }
    }
    
    public void pop()
    {
        Node previous = null;
        Node current = first;
        
        if (first == null)
            return;
            
        while (current.next != null)
        {
            previous = current;
            current = current.next;
        }
        current = previous;
    }
    
    public void traverse()
    {
        Node current = first;
        while (current != null) {
            cout << current.data;
            current = current.next;
        }
    }
}

void main()
{
    int x;
    char c;
    bool f;
    List list = new List();
    list.push(1);
    list.push(2);
    list.push(3);
    list.traverse();
    list.pop();
}